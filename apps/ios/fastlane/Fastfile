# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  # Idea: write a lane that adds either the full changelog or a subset of changes
  # to the app's what's new plist file.
  # Idea: insert production service URL here, as well as sentry DSN and other potentially sensitive configuration data.
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Generate changelog...
    unlock_keychain
    #increment_build_number(xcodeproj: "GuideDogs.xcodeproj")
    build_app(
      workspace: "GuideDogs.xcworkspace",
      scheme: "Openscape",
      output_name: "openscape.ipa",
      output_directory: "build", # so git ignores
      export_xcargs: "-allowProvisioningUpdates",
      clean: false,
      export_options: {
        provisioningProfiles: {
          "io.openscape.openscape" => "match AppStore io.openscape.openscape"
          #"io.openscape.debug" => "",
          #"io.openscape.adhoc => ""
        }
      }
    )
    # Upload dsyms to sentry: install sentry-cli and run sentry-cli login --url https://sentry.openscape.io
    # generate a token and paste it into the prompt from that command - it will store it in ~.sentryclirc
    sentry_upload_dif(org_slug: "openscape-developers", project_slug: "openscape", path: "./build")
    #upload_to_testflight(skip_waiting_for_build_processing: true)
  end

  desc "Removes testers if they haven't launched the app in a month"
  lane :clean_testers do
    clean_testflight_testers
  end

  # To push new certificates to the repository (must have sufficient role in app store connect):
  # bundle exec fastlane match development
  # bundle exec fastlane match appstore

  desc "Retrieves and installs code signing certificates"
  lane:certs do
    unlock_keychain
    match(clone_branch_directly: true, readonly: true)
  end
end
